name: OneClickDocs-Install

run-name: Install Docs on pure environment

on:
  workflow_dispatch:
    

jobs:
  vagrant-up:
    name: "Test Docs with ${{matrix.name}}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:          
          - distr: onlyoffice
            os: base-centos7
            name: "CentOS 7"

          - distr: onlyoffice
            os: base-centos8s
            name: "CentOS 8 Stream"         

          - distr: onlyoffice
            os: base-centos9s
            name: "CentOS 9 Stream" 

          - distr: centos
            os: stream10
            name: "CentOS10 Stream"

          - distr: onlyoffice
            os: base-debian10
            name: "Debian 10"

          - distr: onlyoffice
            os: base-debian11
            name: "Debian 11"

          - distr: onlyoffice
            os: base-debian12
            name: "Debian 12"

          - distr: onlyoffice
            os: base-ubuntu1804
            name: "Ubuntu 18.04"            

          - distr: onlyoffice
            os: base-ubuntu2004
            name: "Ubuntu 20.04"

          - distr: onlyoffice
            os: base-ubuntu2204
            name: "Ubuntu 22.04"

          - distr: onlyoffice
            os: base-ubuntu2404
            name: "Ubuntu 24.04"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Set up vagrant and virtualbox
      run: |
           curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
           echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com jammy main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
           sudo apt update -y 
           sudo apt install vagrant virtualbox -y

    - name: Test production scripts
      if: ${{ github.event_name == 'push' }}
      uses: nick-fields/retry@v2
      with:
        max_attempts: 2
        timeout_minutes: 40
        retry_on: error
        command: |
                set -eux
                
                cd tests/vagrant
                   TEST_CASE='--production-install' \
                   DISTR='${{ matrix.distr }}' \
                   OS='${{ matrix.os }}' \
                   DOWNLOAD_SCRIPT='-ds true' \
                   RAM='6000' \
                   CPU='3' \
                   ARGUMENTS="-arg '--skiphardwarecheck true --makeswap false'" \
                   vagrant up
        on_retry_command: |
              echo "RUN CLEAN UP: Destroy vagrant and one more try"
              cd tests/vagrant
              sleep 10
              vagrant destroy --force
